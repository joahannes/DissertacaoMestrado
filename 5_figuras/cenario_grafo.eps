%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 1248 913
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, May 16, 2018 2:37:49 PM BRT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
1248 913 setpagesize
0 0 0 0 setmargins
0 0 setorigin
1248 913 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1248.00 0.00000 l
1248.00 913.000 l
0.00000 913.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1248.00 0.00000 l
1248.00 913.000 l
0.00000 913.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1248 913 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -507.000 102.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
507.000 -102.000 m
1755.00 -102.000 l
1755.00 811.000 l
507.000 811.000 l
507.000 -102.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -507.000 102.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -507.000 102.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -507.000 102.000 ] defaultmatrix matrix concatmatrix setmatrix
4.00000 w
0 J
1.45000 M
[ 24.0000 8.00000 ] 0.00000 d
1.00000 0.00000 0.00000 RG
newpath
1739.17 354.393 m
1739.17 598.096 1466.89 795.656 1131.01 795.656  c
795.128 795.656 522.844 598.096 522.844 354.393  c
522.844 110.690 795.128 -86.8698 1131.01 -86.8698  c
1466.89 -86.8698 1739.17 110.690 1739.17 354.393  c
h
S
1.00000 w
2 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
1.00000 .400000 .600000 RG
newpath
1136.09 338.375 m
1136.09 369.579 1110.80 394.875 1079.59 394.875  c
1048.39 394.875 1023.09 369.579 1023.09 338.375  c
1023.09 307.171 1048.39 281.875 1079.59 281.875  c
1110.80 281.875 1136.09 307.171 1136.09 338.375  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1136.09 338.375 m
1136.09 369.579 1110.80 394.875 1079.59 394.875  c
1048.39 394.875 1023.09 369.579 1023.09 338.375  c
1023.09 307.171 1048.39 281.875 1079.59 281.875  c
1110.80 281.875 1136.09 307.171 1136.09 338.375  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1069.89 351.528 m
1077.95 351.528 l
1077.95 323.731 l
1069.19 325.481 l
1069.19 320.997 l
1077.89 319.231 l
1082.83 319.231 l
1082.83 351.528 l
1090.89 351.528 l
1090.89 355.685 l
1069.89 355.685 l
1069.89 351.528 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
958.969 459.812 m
958.969 491.017 933.673 516.312 902.469 516.312  c
871.265 516.312 845.969 491.017 845.969 459.812  c
845.969 428.608 871.265 403.312 902.469 403.312  c
933.673 403.312 958.969 428.608 958.969 459.812  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
958.969 459.812 m
958.969 491.017 933.673 516.312 902.469 516.312  c
871.265 516.312 845.969 491.017 845.969 459.812  c
845.969 428.608 871.265 403.312 902.469 403.312  c
933.673 403.312 958.969 428.608 958.969 459.812  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
896.157 472.966 m
913.375 472.966 l
913.375 477.122 l
890.219 477.122 l
890.219 472.966 l
892.094 471.028 894.646 468.429 897.875 465.169  c
901.105 461.909 903.136 459.804 903.969 458.856  c
905.553 457.086 906.657 455.586 907.282 454.356  c
907.907 453.127 908.219 451.919 908.219 450.731  c
908.219 448.794 907.540 447.216 906.180 445.997  c
904.821 444.778 903.053 444.169 900.875 444.169  c
899.323 444.169 897.691 444.437 895.977 444.974  c
894.264 445.510 892.428 446.320 890.469 447.403  c
890.469 442.435 l
892.459 441.632 894.316 441.028 896.040 440.622  c
897.764 440.216 899.339 440.013 900.766 440.013  c
904.547 440.013 907.560 440.955 909.805 442.841  c
912.050 444.726 913.172 447.252 913.172 450.419  c
913.172 451.909 912.891 453.325 912.329 454.669  c
911.766 456.013 910.745 457.596 909.266 459.419  c
908.860 459.888 907.566 461.250 905.383 463.505  c
903.201 465.760 900.125 468.914 896.157 472.966  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1351.42 275.500 m
1351.42 306.704 1326.13 332.000 1294.92 332.000  c
1263.72 332.000 1238.42 306.704 1238.42 275.500  c
1238.42 244.296 1263.72 219.000 1294.92 219.000  c
1326.13 219.000 1351.42 244.296 1351.42 275.500  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1351.42 275.500 m
1351.42 306.704 1326.13 332.000 1294.92 332.000  c
1263.72 332.000 1238.42 306.704 1238.42 275.500  c
1238.42 244.296 1263.72 219.000 1294.92 219.000  c
1326.13 219.000 1351.42 244.296 1351.42 275.500  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1297.91 260.653 m
1285.47 280.106 l
1297.91 280.106 l
1297.91 260.653 l
h
1296.63 256.356 m
1302.81 256.356 l
1302.81 280.106 l
1308.02 280.106 l
1308.02 284.216 l
1302.81 284.216 l
1302.81 292.810 l
1297.91 292.810 l
1297.91 284.216 l
1281.45 284.216 l
1281.45 279.450 l
1296.63 256.356 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1170.09 120.443 m
1170.09 151.647 1144.80 176.943 1113.59 176.943  c
1082.39 176.943 1057.09 151.647 1057.09 120.443  c
1057.09 89.2386 1082.39 63.9427 1113.59 63.9427  c
1144.80 63.9427 1170.09 89.2386 1170.09 120.443  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1170.09 120.443 m
1170.09 151.647 1144.80 176.943 1113.59 176.943  c
1082.39 176.943 1057.09 151.647 1057.09 120.443  c
1057.09 89.2386 1082.39 63.9427 1113.59 63.9427  c
1144.80 63.9427 1170.09 89.2386 1170.09 120.443  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1117.97 118.096 m
1120.33 118.606 1122.18 119.659 1123.51 121.252  c
1124.84 122.846 1125.50 124.815 1125.50 127.159  c
1125.50 130.752 1124.26 133.534 1121.79 135.502  c
1119.32 137.471 1115.80 138.455 1111.23 138.455  c
1109.70 138.455 1108.13 138.304 1106.51 138.002  c
1104.89 137.700 1103.22 137.252 1101.50 136.659  c
1101.50 131.893 l
1102.87 132.695 1104.36 133.299 1105.99 133.705  c
1107.62 134.112 1109.32 134.315 1111.09 134.315  c
1114.19 134.315 1116.54 133.703 1118.16 132.479  c
1119.78 131.255 1120.59 129.481 1120.59 127.159  c
1120.59 125.013 1119.84 123.333 1118.34 122.119  c
1116.83 120.906 1114.73 120.299 1112.05 120.299  c
1107.80 120.299 l
1107.80 116.237 l
1112.23 116.237 l
1114.66 116.237 1116.52 115.752 1117.81 114.784  c
1119.09 113.815 1119.73 112.419 1119.73 110.596  c
1119.73 108.731 1119.07 107.299 1117.74 106.299  c
1116.41 105.299 1114.52 104.799 1112.05 104.799  c
1110.69 104.799 1109.24 104.945 1107.70 105.237  c
1106.15 105.528 1104.45 105.981 1102.59 106.596  c
1102.59 102.205 l
1104.47 101.685 1106.22 101.294 1107.86 101.034  c
1109.50 100.773 1111.04 100.643 1112.48 100.643  c
1116.22 100.643 1119.19 101.494 1121.37 103.198  c
1123.55 104.901 1124.64 107.200 1124.64 110.096  c
1124.64 112.106 1124.06 113.810 1122.91 115.205  c
1121.75 116.601 1120.10 117.565 1117.97 118.096  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1455.58 143.438 m
1455.58 174.642 1430.28 199.938 1399.08 199.938  c
1367.87 199.938 1342.58 174.642 1342.58 143.438  c
1342.58 112.233 1367.87 86.9375 1399.08 86.9375  c
1430.28 86.9375 1455.58 112.233 1455.58 143.438  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1455.58 143.438 m
1455.58 174.642 1430.28 199.938 1399.08 199.938  c
1367.87 199.938 1342.58 174.642 1342.58 143.438  c
1342.58 112.233 1367.87 86.9375 1399.08 86.9375  c
1430.28 86.9375 1455.58 112.233 1455.58 143.438  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1399.06 143.435 m
1396.72 143.435 1394.88 144.062 1393.53 145.317  c
1392.19 146.573 1391.52 148.299 1391.52 150.497  c
1391.52 152.695 1392.19 154.419 1393.53 155.669  c
1394.88 156.919 1396.72 157.544 1399.06 157.544  c
1401.41 157.544 1403.26 156.914 1404.61 155.653  c
1405.96 154.393 1406.64 152.674 1406.64 150.497  c
1406.64 148.299 1405.97 146.573 1404.63 145.317  c
1403.28 144.062 1401.43 143.435 1399.06 143.435  c
h
1394.14 141.341 m
1392.02 140.820 1390.37 139.836 1389.19 138.388  c
1388.01 136.940 1387.42 135.174 1387.42 133.091  c
1387.42 130.174 1388.46 127.869 1390.53 126.177  c
1392.60 124.484 1395.45 123.638 1399.06 123.638  c
1402.70 123.638 1405.55 124.484 1407.62 126.177  c
1409.69 127.869 1410.72 130.174 1410.72 133.091  c
1410.72 135.174 1410.13 136.940 1408.95 138.388  c
1407.76 139.836 1406.12 140.820 1404.02 141.341  c
1406.40 141.893 1408.26 142.974 1409.58 144.583  c
1410.90 146.192 1411.56 148.164 1411.56 150.497  c
1411.56 154.028 1410.48 156.737 1408.33 158.622  c
1406.17 160.507 1403.08 161.450 1399.06 161.450  c
1395.04 161.450 1391.95 160.507 1389.80 158.622  c
1387.64 156.737 1386.56 154.028 1386.56 150.497  c
1386.56 148.164 1387.23 146.192 1388.56 144.583  c
1389.90 142.974 1391.76 141.893 1394.14 141.341  c
h
1392.33 133.544 m
1392.33 135.440 1392.92 136.916 1394.10 137.974  c
1395.28 139.031 1396.94 139.560 1399.06 139.560  c
1401.18 139.560 1402.83 139.031 1404.03 137.974  c
1405.23 136.916 1405.83 135.440 1405.83 133.544  c
1405.83 131.659 1405.23 130.187 1404.03 129.130  c
1402.83 128.073 1401.18 127.544 1399.06 127.544  c
1396.94 127.544 1395.28 128.073 1394.10 129.130  c
1392.92 130.187 1392.33 131.659 1392.33 133.544  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1505.36 414.953 m
1505.36 446.157 1480.06 471.453 1448.86 471.453  c
1417.66 471.453 1392.36 446.157 1392.36 414.953  c
1392.36 383.749 1417.66 358.453 1448.86 358.453  c
1480.06 358.453 1505.36 383.749 1505.36 414.953  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1505.36 414.953 m
1505.36 446.157 1480.06 471.453 1448.86 471.453  c
1417.66 471.453 1392.36 446.157 1392.36 414.953  c
1392.36 383.749 1417.66 358.453 1448.86 358.453  c
1480.06 358.453 1505.36 383.749 1505.36 414.953  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1437.06 395.810 m
1460.50 395.810 l
1460.50 397.919 l
1447.27 432.263 l
1442.11 432.263 l
1454.56 399.966 l
1437.06 399.966 l
1437.06 395.810 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
773.172 569.188 m
773.172 600.392 747.876 625.688 716.672 625.688  c
685.468 625.688 660.172 600.392 660.172 569.188  c
660.172 537.983 685.468 512.688 716.672 512.688  c
747.876 512.688 773.172 537.983 773.172 569.188  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
773.172 569.188 m
773.172 600.392 747.876 625.688 716.672 625.688  c
685.468 625.688 660.172 600.392 660.172 569.188  c
660.172 537.983 685.468 512.688 716.672 512.688  c
747.876 512.688 773.172 537.983 773.172 569.188  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
706.157 550.044 m
725.516 550.044 l
725.516 554.200 l
710.672 554.200 l
710.672 563.138 l
711.391 562.888 712.110 562.703 712.829 562.583  c
713.547 562.463 714.261 562.403 714.969 562.403  c
719.042 562.403 722.266 563.518 724.641 565.747  c
727.016 567.976 728.204 570.997 728.204 574.810  c
728.204 578.726 726.985 581.771 724.547 583.942  c
722.110 586.114 718.667 587.200 714.219 587.200  c
712.688 587.200 711.128 587.070 709.540 586.810  c
707.951 586.549 706.313 586.159 704.625 585.638  c
704.625 580.685 l
706.094 581.487 707.610 582.083 709.172 582.474  c
710.735 582.864 712.386 583.060 714.125 583.060  c
716.938 583.060 719.167 582.317 720.813 580.833  c
722.459 579.349 723.282 577.341 723.282 574.810  c
723.282 572.268 722.459 570.255 720.813 568.771  c
719.167 567.286 716.938 566.544 714.125 566.544  c
712.803 566.544 711.487 566.692 710.180 566.989  c
708.873 567.286 707.532 567.742 706.157 568.356  c
706.157 550.044 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
966.781 656.891 m
966.781 688.095 941.485 713.391 910.281 713.391  c
879.077 713.391 853.781 688.095 853.781 656.891  c
853.781 625.687 879.077 600.391 910.281 600.391  c
941.485 600.391 966.781 625.687 966.781 656.891  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
966.781 656.891 m
966.781 688.095 941.485 713.391 910.281 713.391  c
879.077 713.391 853.781 688.095 853.781 656.891  c
853.781 625.687 879.077 600.391 910.281 600.391  c
941.485 600.391 966.781 625.687 966.781 656.891  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
910.875 654.013 m
908.667 654.013 906.915 654.768 905.618 656.278  c
904.321 657.789 903.672 659.867 903.672 662.513  c
903.672 665.127 904.321 667.195 905.618 668.716  c
906.915 670.237 908.667 670.997 910.875 670.997  c
913.094 670.997 914.849 670.237 916.141 668.716  c
917.433 667.195 918.079 665.127 918.079 662.513  c
918.079 659.867 917.433 657.789 916.141 656.278  c
914.849 654.768 913.094 654.013 910.875 654.013  c
h
920.672 638.560 m
920.672 643.044 l
919.433 642.461 918.183 642.015 916.922 641.708  c
915.662 641.401 914.412 641.247 913.172 641.247  c
909.922 641.247 907.438 642.343 905.719 644.536  c
904.000 646.729 903.021 650.049 902.782 654.497  c
903.740 653.080 904.943 651.994 906.391 651.239  c
907.839 650.484 909.433 650.106 911.172 650.106  c
914.839 650.106 917.732 651.216 919.852 653.435  c
921.972 655.653 923.032 658.679 923.032 662.513  c
923.032 666.252 921.925 669.252 919.711 671.513  c
917.498 673.773 914.553 674.903 910.875 674.903  c
906.667 674.903 903.446 673.289 901.211 670.060  c
898.977 666.830 897.860 662.148 897.860 656.013  c
897.860 650.252 899.227 645.659 901.961 642.231  c
904.696 638.804 908.370 637.091 912.985 637.091  c
914.214 637.091 915.461 637.213 916.727 637.458  c
917.993 637.703 919.308 638.070 920.672 638.560  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1640.55 548.266 m
1640.55 579.470 1615.25 604.766 1584.05 604.766  c
1552.84 604.766 1527.55 579.470 1527.55 548.266  c
1527.55 517.062 1552.84 491.766 1584.05 491.766  c
1615.25 491.766 1640.55 517.062 1640.55 548.266  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1640.55 548.266 m
1640.55 579.470 1615.25 604.766 1584.05 604.766  c
1552.84 604.766 1527.55 579.470 1527.55 548.266  c
1527.55 517.062 1552.84 491.766 1584.05 491.766  c
1615.25 491.766 1640.55 517.062 1640.55 548.266  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
1558.44 561.419 m
1566.50 561.419 l
1566.50 533.622 l
1557.74 535.372 l
1557.74 530.888 l
1566.44 529.122 l
1571.38 529.122 l
1571.38 561.419 l
1579.44 561.419 l
1579.44 565.575 l
1558.44 565.575 l
1558.44 561.419 l
h
1599.94 532.372 m
1597.40 532.372 1595.49 533.622 1594.21 536.122  c
1592.93 538.622 1592.30 542.377 1592.30 547.388  c
1592.30 552.388 1592.93 556.135 1594.21 558.630  c
1595.49 561.125 1597.40 562.372 1599.94 562.372  c
1602.50 562.372 1604.42 561.125 1605.70 558.630  c
1606.97 556.135 1607.61 552.388 1607.61 547.388  c
1607.61 542.377 1606.97 538.622 1605.70 536.122  c
1604.42 533.622 1602.50 532.372 1599.94 532.372  c
h
1599.94 528.466 m
1604.02 528.466 1607.14 530.080 1609.30 533.310  c
1611.45 536.539 1612.53 541.231 1612.53 547.388  c
1612.53 553.523 1611.45 558.205 1609.30 561.435  c
1607.14 564.664 1604.02 566.278 1599.94 566.278  c
1595.85 566.278 1592.73 564.664 1590.58 561.435  c
1588.42 558.205 1587.34 553.523 1587.34 547.388  c
1587.34 541.231 1588.42 536.539 1590.58 533.310  c
1592.73 530.080 1595.85 528.466 1599.94 528.466  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1014.59 -.682292 m
1014.59 30.5218 989.298 55.8177 958.094 55.8177  c
926.890 55.8177 901.594 30.5218 901.594 -.682292  c
901.594 -31.8864 926.890 -57.1823 958.094 -57.1823  c
989.298 -57.1823 1014.59 -31.8864 1014.59 -.682292  c
h
f
4.00000 w
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1014.59 -.682292 m
1014.59 30.5218 989.298 55.8177 958.094 55.8177  c
926.890 55.8177 901.594 30.5218 901.594 -.682292  c
901.594 -31.8864 926.890 -57.1823 958.094 -57.1823  c
989.298 -57.1823 1014.59 -31.8864 1014.59 -.682292  c
h
S
1.00000 w
2 J
10.0000 M
0 J
1.45000 M
newpath
947.688 15.8773 m
947.688 11.3773 l
948.917 11.9606 950.167 12.4085 951.438 12.7210  c
952.709 13.0335 953.954 13.1898 955.172 13.1898  c
958.433 13.1898 960.920 12.0934 962.633 9.90072  c
964.347 7.70801 965.329 4.38249 965.579 -.0758457  c
964.631 1.33040 963.433 2.40593 961.985 3.15072  c
960.537 3.89551 958.933 4.26790 957.172 4.26790  c
953.527 4.26790 950.644 3.16634 948.524 .963217  c
946.404 -1.23991 945.344 -4.25293 945.344 -8.07585  c
945.344 -11.8258 946.451 -14.8311 948.665 -17.0915  c
950.878 -19.3519 953.823 -20.4821 957.500 -20.4821  c
961.709 -20.4821 964.925 -18.8675 967.149 -15.6383  c
969.373 -12.4092 970.485 -7.71647 970.485 -1.56022  c
970.485 4.17936 969.123 8.76270 966.399 12.1898  c
963.675 15.6169 960.006 17.3304 955.391 17.3304  c
954.162 17.3304 952.912 17.2080 951.641 16.9632  c
950.370 16.7184 949.053 16.3564 947.688 15.8773  c
h
957.500 .408529 m
959.709 .408529 961.461 -.346679 962.758 -1.85710  c
964.055 -3.36751 964.704 -5.44043 964.704 -8.07585  c
964.704 -10.7008 964.055 -12.7738 962.758 -14.2946  c
961.461 -15.8154 959.709 -16.5758 957.500 -16.5758  c
955.282 -16.5758 953.527 -15.8154 952.235 -14.2946  c
950.943 -12.7738 950.297 -10.7008 950.297 -8.07585  c
950.297 -5.44043 950.943 -3.36751 952.235 -1.85710  c
953.527 -.346679 955.282 .408529 957.500 .408529  c
h
f
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
949.068 427.864 m
1032.99 370.324 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1133.83 322.539 m
1240.69 291.336 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1088.30 282.550 m
1104.88 176.267 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1156.53 157.162 m
1251.98 238.780 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1329.91 231.137 m
1364.09 187.800 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1169.91 124.979 m
1342.76 138.901 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
1336.79 313.433 m
1406.99 377.020 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
853.779 488.475 m
765.362 540.525 l
S
1.00000 w
2 J
10.0000 M
4.00000 w
0 J
1.45000 M
newpath
904.707 516.268 m
908.043 600.435 l
S
1.00000 w
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
